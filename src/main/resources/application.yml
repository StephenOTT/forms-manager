micronaut:
  application:
    name: forms-manager
  server:
    cors:
      enabled: true
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      redoc:
        paths: classpath:META-INF/swagger/views/redoc
        mapping: /redoc/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  security:
    enabled: true
    endpoints:
      login:
        enabled: true # Enables login controller
      oauth:
        enabled: true # Enables jwt refresh controller
    token:
      jwt:
        enabled: true
#        generator:
#          refresh-token-expiration:
#          access-token-expiration:
        signatures:
          secret:
            generator:
              # Secret must be at least 256 bytes in length
              secret: 'fewifjweiufweiufjweiufjewiufhweiufhewiufhweiufhweiufhweiufhweiufhweiufhiweuferiugjhreiguer89g98th439ufheriugfhiwufhriughweiughewiufhweiufhw8h934fhiewufhiweugheirugnkruvherifuwe98rtu9we8ug9ew8gu9er8gu9er8guer98gue9r8gu9e8gher9uvher98bs98h7ysig8u9e8ug9eru8g'
              base64: true # Indicates the secret is already base64
              jws-algorithm: HS256
jackson:
#  bean-introspection-module: true
  serializationInclusion: ALWAYS # Includes Nulls and Empty Arrays in serialization
  serialization:
    indentOutput: false # Use for debug usage such as console
    writeDatesAsTimestamps: false # turn to true if you want number based dates (epoch)
---
datasources:
  default:
    url: jdbc:h2:./build/DB/dbdevDb1;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE # jdbc:h2:~/devDb1;MODE=PostgreSQL;AUTO_SERVER=TRUE
    driverClassName: org.h2.Driver
    username: sa
    password: ''
    schema-generate: CREATE_DROP
    dialect: H2
---
# The Form Validation Server
formValidator:
  client:
    host: http://localhost:8085

myapp:
  default:
    tenants:
      - name: admin-tenant
        description: my custom admin tenant
      - name: generic1
        description: My generic tenant
    roles:
      - name: SUPER_ADMIN_ROLE
        tenant: admin-tenant
        permissions:
          - "tenants:*"
          - "roles:*"
          - "groups:*"
          - "users:*"
          - "forms:*"
          - "form_schemas:*"
          - "services:*"
    groups:
      - name: super-admin-group
        tenant: admin-tenant
        roles:
          - SUPER_ADMIN_ROLE
    users:
      - email: 123@123.com
        password: 1234567890
        tenant: admin-tenant
        groups:
          - super-admin-group
